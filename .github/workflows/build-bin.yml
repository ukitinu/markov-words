name: Build binaries

#
# Generates the release artefacts on PR to master
#

on:
  pull_request:
    branches:
      - master

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Build jar
        run: mvn clean install -DskipTests
      - name: Get release name
        id: rel-name
        run: |
          REL=$(cat target/RELEASE)
          echo "::set-output name=REL::$REL"
      - name: Linux archive
        run: |
          cd target
          tar -czf ${{steps.rel-name.outputs.REL}}-linux-jar.tar.gz ${{steps.rel-name.outputs.REL}}.jar mkw.sh
      - name: Windows archive
        run: |
          cd target
          zip ${{steps.rel-name.outputs.REL}}-windows-jar.zip ${{steps.rel-name.outputs.REL}}.jar mkw.bat
      - name: Upload Linux archive
        uses: actions/upload-artifact@v2
        with:
          name: jar-linux
          path: ./target/*-linux-jar.tar.gz
      - name: Upload Windows archive
        uses: actions/upload-artifact@v2
        with:
          name: jar-windows
          path: ./target/*-windows-jar.zip

  build-graalvm-ubuntu:
    name: GraalVM-latest on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build jar
        run: mvn clean install -DskipTests
      - name: Get release name
        id: rel-name
        run: |
          REL=$(cat target/RELEASE)
          echo "::set-output name=REL::$REL"
      - name: Build native image
        run: |
          cd target
          native-image -jar ${{steps.rel-name.outputs.REL}}.jar --static -H:Name=mkw
          tar -czf ${{steps.rel-name.outputs.REL}}-linux-nat-img.tar.gz mkw
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: nat-img-ubuntu-latest
          path: ./target/*-linux-nat-img.tar.gz

  build-graalvm-windows:
    name: GraalVM-latest on windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build jar
        run: mvn clean install -DskipTests
      - name: Get release name
        id: rel-name
        run: |
          REL=$(type target/RELEASE)
          echo "::set-output name=REL::$REL"
      - name: Build native image
        run: |
          cd target
          native-image -jar ${{steps.rel-name.outputs.REL}}.jar --static -H:Name=mkw.exe
          zip ${{steps.rel-name.outputs.REL}}-windows-nat-img.zip mkw.exe
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: nat-img-windows-latest
          path: ./target/*-windows-nat-img.zip
